{"version":3,"sources":["index.js"],"names":["express","require","router","Router","catchErrors","Employee","password","bcrypt","hash","compare","validateForm","form","name","id","comparePassword","length","get","req","res","next","render","title","post","user","regeneratorRuntime","async","_context","prev","log","body","awrap","findOne","ID","sent","flash","abrupt","redirect","PWD","where","session","authorization","authorization_no","stop","err","_context2","console","generateHash","create","dept_no","work_experience"],"mappings":"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","file":"index.min.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar Employee = require('../models/emp');\nconst catchErrors = require('../lib/async-error');\nvar bcrypt = require('bcrypt');\n\nfunction generateHash(password){\n  return bcrypt.hash(password, 10);\n}\n\nfunction comparePassword(password, hash){\n  return bcrypt.compare(password, hash);\n}\n\nfunction validateForm(form){\n  var name = form.name || \"\";\n  var id = form.id || \"\";\n  var password = form.password || \"\";\n\n  if(!name) {\n    return '이름을 입력해주세요.';\n  }\n\n  if(name.length < 2) {\n    return '이름은 두 글자 이상 입력해주세요.';\n  }\n\n  if (!id) {\n    return 'ID를 입력해주세요.';\n  }\n\n  if (!password) {\n    return '비밀번호를 입력해주세요.';\n  }\n\n  // if (password !== password_confirmation) {\n  //   return '비밀번호가 일치하지 않습니다.';\n  // }\n\n  if (password.length < 7) {\n    return '비밀번호가 너무 짧습니다. (8자 이상)';\n  }\n\n  return null;\n}\n\n/* GET index listing. */\nrouter.get('/', function(req, res, next) {\n  res.render('index', { title: 'Index' });\n});\n\nrouter.get('/signup', (req, res) => {\n  res.render('signup', {});\n});\n\nrouter.route('/signin')\n  .get((req, res) => {\n    res.render('signin', {});\n  })\n\n  .post(catchErrors(async (req, res, next) => {\n    console.log(req.body);\n\n    const user = await Employee.findOne({ where: { ID: req.body.id } });\n    if(!user){\n      req.flash('danger', 'Not exist user.');\n      return res.redirect('back');\n    }\n\n    const compare = await comparePassword(req.body.password, user.PWD);\n    if(!compare){\n      req.flash('danger', 'Passsword do not match.');\n      return res.redirect('back');\n    }\n\n    req.session.user = user;\n    req.session.authorization = user.authorization_no;\n    req.flash('success', 'Welcome!');\n    return res.redirect('/');\n  }));\n\nrouter.post('/signup', catchErrors(async (req, res, next) => {\n  console.log(req.body);\n\n  var err = validateForm(req.body);\n  if(err){\n    req.flash('danger', err);\n    return res.redirect('back');\n  }\n\n  var user = await Employee.findOne({id: req.body.id});\n\n  if(user) {\n    req.flash('danger', '이미 존재하는 ID 입니다.');\n    return res.redirect('back');\n  }\n\n  var password = await generateHash(req.body.password);\n\n  user = await Employee.create({\n    name: req.body.name,\n    ID: req.body.id,\n    PWD: password,\n    dept_no: null,\n    authorization_no: null,\n    education: null,\n    work_experience: null\n  });\n\n  req.flash('success', 'Registered successfully. Please sign in.');\n  res.redirect('/');\n}));\n\nrouter.get('/signout', (req, res, next) => {\n  delete req.session.user;\n  req.flash('success', 'Successfully signed out.');\n  res.redirect('/');\n});\n\n\nrouter.get('/test', function(req, res, next) {\n  res.render('index2', { title: 'Express', name: 'han sh' });\n});\n/*회원가입 화면*/\nrouter.get('/test3', function(req, res, next){\n  res.render('signup', { title: 'Express' });\n}); \n\n/*nav_개발자*/\nrouter.get('/nav_developer', function(req, res, next){\n  res.render('nav_develop', { title: 'Express' });\n});\n\n/*nav_경영진*/\nrouter.get('/nav_management', function(req, res, next){\n  res.render('nav_management', { title: 'Express' });\n});\n\n/*프로젝트 등록 페이지*/\nrouter.get('/addproject', function(req, res, next){\n  res.render('addProject', { title: 'Express' });\n});\n\n/*개인정보 수정*/\nrouter.get('/myprofileedit', function(req, res, next){\n  res.render('myProfileEdit', { title: 'Express' });\n});\n\n/*project list*/\nrouter.get('/project/list', function(req, res, next){\n  res.render('project/list', { title: 'Express' });\n});\n\n/*project create*/\nrouter.get('/project/new', function(req, res, next){\n  res.render('project/new', { title: 'Express' });\n});\n\n/*project details*/\nrouter.get('/project/details', function(req, res, next){\n  res.render('project/details', { title: 'Express' });\n});\n\n/*project modify*/\nrouter.get('/project/modify', function(req, res, next){\n  res.render('project/modify', { title: 'Express' });\n});\n\nmodule.exports = router;\n"]}